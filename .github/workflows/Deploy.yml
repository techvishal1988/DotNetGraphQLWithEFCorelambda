name: .NET
on:
  push:
    branches: [ main ]
defaults:
  run:
    working-directory: ./OrganizationSolution/Source/App/Geography.Serverless
jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      working-directory: ./OrganizationSolution/Source/App/Geography.Serverless
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ASPNETCORE_ENVIRONMENT: "Production"      
      AWSConfigurationOptions__DbConnectionString: ${{secrets.DbConnectionString}}
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Install AWS CLI v2
      run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: dotnet tool install
      run: dotnet tool install -g Amazon.Lambda.Tools
    - name: Restore dependencies
      run: dotnet restore Geography.Serverless.csproj
    - name: Build
      run: dotnet build Geography.Serverless.csproj
    - name: Publish
      run: |
           dotnet publish -c Release -o publish
           ls    
           dotnet lambda package
    - name: Upload to S3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Zip Artifact
      run:  zip -r GeographyServerless.zip ./publish/    
    - name: Copy Artifact to S3
      run: aws s3 cp GeographyServerless.zip s3://rsys123/ 
     #- run: aws lambda update-function-code --function-name=Hackathon-Serverless-Api LambdaEnvVariables --environment "Variables={AWSConfigurationOptions__DbConnectionString=${{secrets.DbConnectionString}}}" --zip-file=fileb://GeographyServerless.zip
    #- run: aws lambda update-function-code --function-name=Hackathon-Serverless-Api --zip-file=fileb://GeographyServerless.zip
    - name: deploy to lambda
      run: |
            aws lambda create-function \
            --function-name flambda \
            --runtime dotnet6 --handler Geography.Serverless::Geography.Serverless.LambdaEntryPoint::FunctionHandlerAsync \
            --zip-file fileb://./GeographyServerless.zip \
            --role arn:aws:iam::751111534101:role/service-role/flambda-role-ljfet37r \
            --region us-west-2
